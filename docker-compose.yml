# ================================================================================
# üê≥ BASE INFRASTRUCTURE - MAKEFILE
# üë®‚Äçüíª Author: Kleilson Santos
# üìÖ Last update: 2025-06-18
#
# üèóÔ∏è INTEGRATED SERVICES (as per docker-compose.yml):
#   üõ¢Ô∏è Databases:           MongoDB, PostgreSQL, MySQL, Redis, Vault
#   üìä Monitoring:          Prometheus, Grafana, Node Exporter, cAdvisor, Alertmanager, Blackbox Exporter
#   üìà Exporters:           MongoDB Exporter, PostgreSQL Exporter, MySQL Exporter, Redis Exporter, RabbitMQ Exporter
#   üêá Messaging:           RabbitMQ (+Exporter)
#   üîê Authentication:      Keycloak
#   üê≥ Management:          Portainer
#   üñ•Ô∏è Interfaces:          pgAdmin, phpMyAdmin, Mongo Express, RedisInsight
#   üßπ Code Quality:        SonarQube
#   üìß Mail:                Mailhog
#   üõ∞Ô∏è Service Discovery:   Eureka Server
#   üõ†Ô∏è APIs/Apps:           Users API, Webhook Listener
#
#   üîé Monitored Services (Prometheus targets):
#      - Prometheus
#      - Node Exporter
#      - cAdvisor
#      - MongoDB Exporter
#      - PostgreSQL Exporter
#      - RabbitMQ Exporter
#      - MySQL Exporter
#      - Redis Exporter
#      - Blackbox Exporter
#      - Keycloak (via Blackbox, if configured)
# =================================================================================================

# üåê NETWORKS CONFIGURATION
networks:
  infra-default-shared-net:
    name: infra-default-shared-net
    driver: bridge
  spring-shared-net:
    external: true
    name: spring-shared-net

# üóÑÔ∏è DATABASE SERVICES
services:
  # ======================
  # üìß POSTFIX ECOSYSTEM
  # ======================
  mailhog:
    image: mailhog/mailhog
    container_name: infra-default-mailhog
    restart: always
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # Web UI
    volumes:
      - infra-default-mailhog_data:/mail
    networks:
      - infra-default-shared-net

  # ======================
  # üõ¢Ô∏è MONGODB ECOSYSTEM
  # ======================
  mongo:
    image: mongo:latest
    container_name: infra-default-mongo
    env_file: .env
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - infra-default-mongo_data:/data/db
    networks:
      - infra-default-shared-net
  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: infra-default-mongo-express
    env_file: .env
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_MONGODB_PORT: ${ME_CONFIG_MONGODB_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${ME_CONFIG_MONGODB_AUTH_DATABASE}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      ME_CONFIG_MONGODB_USE_UNIFIED_TOPOLOGY: ${ME_CONFIG_MONGODB_USE_UNIFIED_TOPOLOGY}
    depends_on:
      - mongo
    networks:
      - infra-default-shared-net

  mongodb-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: infra-default-mongodb-exporter
    env_file: .env
    restart: always
    environment:
      MONGODB_URI: 'mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017'
    ports:
      - '9216:9216'
    networks:
      - infra-default-shared-net
    depends_on:
      - mongo

  # =======================
  # üêò POSTGRESQL ECOSYSTEM
  # =======================
  postgres:
    image: postgres:15
    container_name: infra-default-postgres
    env_file: .env
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - infra-default-postgres_data:/var/lib/postgresql/data
    networks:
      - infra-default-shared-net

  # ======================
  # üñ•Ô∏è PGADMIN ECOSYSTEM
  # =======================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: infra-default-pgadmin
    env_file: .env
    restart: always
    ports:
      - '8088:80'
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - infra-default-pgadmin-data:/var/lib/pgadmin
    networks:
      - infra-default-shared-net

  # ======================
  # üóÑÔ∏è POSTGRESQL EXPORTER
  # ======================
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: infra-default-postgres-exporter
    env_file: .env
    restart: always
    environment:
      DATA_SOURCE_NAME: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable'
    ports:
      - '9187:9187'
    depends_on:
      - postgres
    networks:
      - infra-default-shared-net

  # ======================
  # üê¨ MYSQL ECOSYSTEM
  # ======================
  mysql:
    image: mysql:5.7
    container_name: infra-default-mysql
    env_file: .env
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - infra-default-mysql_data:/var/lib/mysql
    networks:
      - infra-default-shared-net
      #- spring-shared-net

  # =======================
  # üñ•Ô∏è PHPMYADMIN ECOSYSTEM
  # =======================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: infra-default-phpmyadmin
    env_file: .env
    restart: always
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - '8082:80'
    depends_on:
      - mysql
    networks:
      - infra-default-shared-net

  # ======================
  # üóÑÔ∏è MYSQL EXPORTER
  # ======================
  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: infra-default-mysql-exporter
    env_file: .env
    restart: always
    environment:
      DATA_SOURCE_NAME: ${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(infra-defualt-mysql:3306)/
    ports:
      - '9104:9104'
    networks:
      - infra-default-shared-net
    depends_on:
      - mysql
    command:
      - --mysqld.username=${MYSQL_USER}:$${MYSQL_PASSWORD}
      - --mysqld.address=mysql:3306

  # ======================
  # üîë KEYCLOAK (AUTH)
  # ======================
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: infra-default-keycloak
    env_file: .env
    restart: always
    environment:
        KC_DB: ${KC_DB}
        KC_DB_URL_HOST: ${KC_DB_URL_HOST}
        KC_DB_PORT: ${KC_DB_PORT}
        KC_DB_USERNAME: ${KC_DB_USERNAME}
        KC_DB_PASSWORD: ${KC_DB_PASSWORD}
        KC_DB_DATABASE: ${KC_DB_DATABASE}
        KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
        KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        KC_HOSTNAME: ${KC_HOSTNAME}
        KC_PROXY: ${KC_PROXY}

    depends_on:
      - postgres
    ports:
      - '8099:8080'
    command:
      - start
    networks:
      - infra-default-shared-net

  # ======================
  # üìä MONITORING TOOLS
  # ======================
  prometheus:
    image: prom/prometheus
    container_name: infra-default-prometheus
    env_file: .env
    restart: always
    environment:
      - TZ=America/Lisbon
      - PROMETHEUS_CONFIG=./prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - '9090:9090'
    networks:
      - infra-default-shared-net

  # ======================
  # üìä MONITORING TOOLS
  # ======================
  grafana:
    image: grafana/grafana
    container_name: infra-default-grafana
    env_file: .env
    restart: always
    ports:
      - '3001:3000'
    volumes:
      - infra-default-grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    extra_hosts:
      - '172.17.0.1:host-gateway'
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_AUTH_DISABLE_LOGIN_FORM: ${GF_AUTH_DISABLE_LOGIN_FORM}
    networks:
      - infra-default-shared-net

  # ======================
  # üóÑÔ∏è BLACKBOX EXPORTER
  # ======================
  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: infra-default-blackbox-exporter
    ports:
      - '9115:9115'
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml
    networks:
      - infra-default-shared-net

  # ======================
  # üê≥ CADVISOR
  # ======================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: infra-default-cadvisor
    env_file: .env
    restart: always
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - infra-default-shared-net

  # ======================
  # üê≥ NODE EXPORTER
  # ======================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: infra-default-node-exporter
    env_file: .env
    restart: always
    ports:
      - '9100:9100'
    networks:
      - infra-default-shared-net

  # ======================
  # üßπ CODE QUALITY TOOLS
  # ======================
  sonarqube:
    image: sonarqube:latest
    container_name: infra-default-sonarqube
    env_file: .env
    restart: always
    ports:
      - '9000:9000'
    environment:
      SONAR_JDBC_URL: ${SONAR_JDBC_URL}
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
      SONARQUBE_JVM_OPTIONS: ${SONARQUBE_JVM_OPTIONS}
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: ${SONAR_ES_BOOTSTRAP_CHECKS_DISABLE}
    volumes:
      - infra-default-sonarqube_data:/opt/sonarqube/data
      - infra-default-sonarqube_extensions:/opt/sonarqube/extensions
      - infra-default-sonarqube_logs:/opt/sonarqube/logs
    networks:
      - infra-default-shared-net

  # =======================
  # üê≥ CONTAINER MANAGEMENT
  # =======================
  portainer:
    image: portainer/portainer-ce
    container_name: infra-default-portainer
    env_file: .env
    restart: always
    ports:
      - '9001:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - infra-default-portainer_data:/data
    networks:
      - infra-default-shared-net

  # ======================
  # üêá RABBITMQ ECOSYSTEM
  # ======================
  rabbitmq:
    image: rabbitmq:management
    container_name: infra-default-rabbitmq
    restart: always
    env_file: .env
    networks:
      - infra-default-shared-net
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - infra-default-rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  # ======================
  # üìä RABBITMQ EXPORTER
  # ======================
  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    container_name: infra-default-rabbitmq-exporter
    restart: always
    env_file: .env
    networks:
      - infra-default-shared-net
    environment:
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_URL: ${RABBIT_URL}
      RABBIT_PORT: ${RABBIT_PORT}
      RABBIT_CAPACITIES: true
    ports:
      - '9419:9419'
    depends_on:
      rabbitmq:
        condition: service_healthy

  # ======================
  # üóÉÔ∏è REDIS ECOSYSTEM
  # ======================
  redis:
    image: redis:7.2
    container_name: infra-default-redis
    env_file: .env
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - infra-default-redis_data:/data
    networks:
      - infra-default-shared-net

  # ======================
  # üìä REDIS INSIGHT
  # ======================
  redisinsight:
    image: redis/redisinsight:latest
    container_name: infra-default-redisinsight
    restart: always
    ports:
      - '8083:5540'
    volumes:
      - infra-default-redisinsight_data:/usr/src/app/redisinsight/api/dist
    user: '1000:1000'
    depends_on:
      - redis
    networks:
      - infra-default-shared-net

  # ======================
  # üìä REDIS EXPORTER
  # ======================
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: infra-default-redis-exporter
    env_file: .env
    restart: always
    environment:
      REDIS_ADDR: ${REDIS_ADDR}
    ports:
      - '9121:9121'
    networks:
      - infra-default-shared-net
    depends_on:
      - redis

  # ======================
  # üìä USERS-API
  # ======================
  users-api:
    image: santos/users-api:v1.0.0
    container_name: infra-default-users-api
    restart: always
    ports:
      - '8089:8089'
    volumes:
      - infra-default-users-api_data:/data/db
    networks:
      - infra-default-shared-net

  # ======================
  # üìä ALERTMANAGER
  # ======================
  alertmanager:
    image: prom/alertmanager
    container_name: infra-default-alertmanager
    restart: always
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - '9093:9093'
    networks:
      - infra-default-shared-net

  # ======================
  # üìä WEBHOOK LISTENER
  # ======================
  webhook-listener:
    image: santos/webhook-alerts-rabbitmq:v1.0.1
    container_name: infra-default-webhook-listener
    restart: always
    ports:
      - "5001:5001"
    environment:
      RABBIT_QUEUE: ${RABBIT_QUEUE}
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_URL: ${RABBIT_URL}
      RABBIT_PORT: ${RABBIT_PORT}
      RABBIT_HOST: ${RABBIT_HOST}
    depends_on:
      - rabbitmq
    networks:
      - infra-default-shared-net

  # ======================
  # üìä VAULT
  # ======================
  vault:
    image: hashicorp/vault:latest
    container_name: infra-default-vault
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: ${VAULT_ADDR}
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
    volumes:
      - ./vault/config:/vault/config
      - ./vault/data:/vault/data
    command: "vault server -config=/vault/config/vault-config.hcl"
    restart: always
    networks:
      - infra-default-shared-net

  eureka-server:
    image: santos/eureka-server:latest
    container_name: infra-default-eureka-server
    ports:
      - "8761:8761"
    restart: always
    networks:
      - infra-default-shared-net

# üíæ VOLUMES CONFIGURATION
volumes:
  infra-default-mailhog_data:
    name: infra-default-mailhog_data
  infra-default-users-api_data:
    name: infra-default-users-api_data
  infra-default-sonarqube_data:
    name: infra-default-sonarqube_data
  infra-default-sonarqube_extensions:
    name: infra-default-sonarqube_extensions
  infra-default-sonarqube_logs:
    name: infra-default-sonarqube_logs
  infra-default-mongo_data:
    name: infra-default-mongo_data
  infra-default-postgres_data:
    name: infra-default-postgres_data
  infra-default-portainer_data:
    name: infra-default-portainer_data
  infra-default-pgadmin-data:
    name: infra-default-pgadmin-data
  infra-default-grafana-storage:
    name: infra-default-grafana-storage
  infra-default-mysql_data:
    name: infra-default-mysql_data
  infra-default-phpmyadmin_data:
    name: infra-default-phpmyadmin_data
  infra-default-redis_data:
    name: infra-default-redis_data
  infra-default-rabbitmq_data:
    name: infra-default-rabbitmq_data
  infra-default-redisinsight_data:
    name: infra-default-redisinsight_data
